{"version":3,"sources":["bar.js","newPredict.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","side","classes","React","useState","top","link","state","setState","toggleDrawer","open","event","className","Drawer","anchor","onClose","fullList","role","onClick","List","ListItem","button","key","ListItemIcon","ListItemText","primary","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","fab","margin","left","extendedIcon","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","TFWrapper","model","detect","input","batched","tf","fromPixels","expandDims","height","shape","width","executeAsync","then","result","scores","dataSync","boxes","dispose","numBoxes","numClasses","maxes","i","max","Number","MIN_VALUE","index","j","calculateMaxScores","maxScores","prevBackend","indexTensor","boxes2","nonMaxSuppression","indexes","count","length","objects","bbox","minY","minX","maxY","maxX","push","class","score","buildDetectedObjects","TheResult","props","videoRef","createRef","canvasRef","empty","detectFrame","video","labels","predictions","renderPredictions","requestAnimationFrame","note","ctx","current","getContext","clearRect","canvas","font","textBaseline","forEach","prediction","x","y","label","parseInt","strokeStyle","lineWidth","strokeRect","fillStyle","textWidth","measureText","textHeight","fillRect","fillText","getPrediction","a","storage","setTimeout","console","log","navigator","mediaDevices","getUserMedia","webCamPromise","audio","facingMode","stream","window","srcObject","Promise","resolve","_","onloadedmetadata","modelPromise","MODEL_URL","labelsPromise","fetch","data","json","all","values","catch","error","autoPlay","playsInline","muted","ref","this","Fab","Component","ShotButton","setOpen","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Main","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0486c258.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState({\r\n    top : false,\r\n    link : '11111',\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const fullList = side => (\r\n    <div\r\n      className={classes.fullList}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        <ListItem button key='首頁'>\r\n          <ListItemIcon >{<HomeRoundedIcon />}</ListItemIcon>\r\n          <ListItemText primary='首頁' />\r\n        </ListItem>\r\n        <ListItem button key='個人資料'>\r\n          <ListItemIcon >{<AccountCircleIcon />}</ListItemIcon>\r\n          <ListItemText primary='個人資料' />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer anchor=\"top\" open={state.top} onClose={toggleDrawer('top', false)}>\r\n          {fullList('top')}\r\n      </Drawer>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <IconButton onClick={toggleDrawer('top', true)} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              歡迎來到Beyond Toy! {state.link}\r\n            </Typography>\r\n            <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport * as tf from '@tensorflow/tfjs'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n    left :'80vw',\r\n    top :'80vh',\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst MODEL_URL = process.env.PUBLIC_URL + '/model_web/'\r\nconst LABELS_URL = MODEL_URL + 'labels.json'\r\nconst MODEL_JSON = MODEL_URL + 'model.json'\r\n\r\nconst TFWrapper = model => {\r\n  const calculateMaxScores = (scores, numBoxes, numClasses) => {\r\n    const maxes = []\r\n    const classes = []\r\n    for (let i = 0; i < numBoxes; i++) {\r\n      let max = Number.MIN_VALUE\r\n      let index = -1\r\n      for (let j = 0; j < numClasses; j++) {\r\n        if (scores[i * numClasses + j] > max) {\r\n          max = scores[i * numClasses + j]\r\n          index = j\r\n        }\r\n      }\r\n      maxes[i] = max\r\n      classes[i] = index\r\n    }\r\n    return [maxes, classes]\r\n  }\r\n\r\n  const buildDetectedObjects = (\r\n    width,\r\n    height,\r\n    boxes,\r\n    scores,\r\n    indexes,\r\n    classes\r\n  ) => {\r\n    const count = indexes.length\r\n    const objects = []\r\n    for (let i = 0; i < count; i++) {\r\n      const bbox = []\r\n      for (let j = 0; j < 4; j++) {\r\n        bbox[j] = boxes[indexes[i] * 4 + j]\r\n      }\r\n      const minY = bbox[0] * height\r\n      const minX = bbox[1] * width\r\n      const maxY = bbox[2] * height\r\n      const maxX = bbox[3] * width\r\n      bbox[0] = minX\r\n      bbox[1] = minY\r\n      bbox[2] = maxX - minX\r\n      bbox[3] = maxY - minY\r\n      objects.push({\r\n        bbox: bbox,\r\n        class: classes[indexes[i]],\r\n        score: scores[indexes[i]]\r\n      })\r\n    }\r\n    return objects\r\n  }\r\n\r\n  const detect = input => {\r\n    const batched = tf.tidy(() => {\r\n      const img = tf.browser.fromPixels(input)\r\n      // Reshape to a single-element batch so we can pass it to executeAsync.\r\n      return img.expandDims(0)\r\n    })\r\n\r\n    const height = batched.shape[1]\r\n    const width = batched.shape[2]\r\n\r\n    return model.executeAsync(batched).then(result => {\r\n      const scores = result[0].dataSync()\r\n      const boxes = result[1].dataSync()\r\n\r\n      // clean the webgl tensors\r\n      batched.dispose()\r\n      tf.dispose(result)\r\n\r\n      const [maxScores, classes] = calculateMaxScores(\r\n        scores,\r\n        result[0].shape[1],\r\n        result[0].shape[2]\r\n      )\r\n\r\n      const prevBackend = tf.getBackend()\r\n      // run post process in cpu\r\n      tf.setBackend('cpu')\r\n      const indexTensor = tf.tidy(() => {\r\n        const boxes2 = tf.tensor2d(boxes, [\r\n          result[1].shape[1],\r\n          result[1].shape[3]\r\n        ])\r\n        return tf.image.nonMaxSuppression(\r\n          boxes2,\r\n          maxScores,\r\n          20, // maxNumBoxes\r\n          0.5, // iou_threshold\r\n          0.5 // score_threshold\r\n        )\r\n      })\r\n      const indexes = indexTensor.dataSync()\r\n      indexTensor.dispose()\r\n      // restore previous backend\r\n      tf.setBackend(prevBackend)\r\n\r\n      return buildDetectedObjects(\r\n        width,\r\n        height,\r\n        boxes,\r\n        maxScores,\r\n        indexes,\r\n        classes\r\n      )\r\n    })\r\n  }\r\n  return {\r\n    detect: detect\r\n  }\r\n}\r\n\r\nclass TheResult extends React.Component {\r\n  videoRef = React.createRef()\r\n  canvasRef = React.createRef()\r\n  empty = React.createRef()\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {note:[],storage:[]};\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n      const webCamPromise = navigator.mediaDevices\r\n        .getUserMedia({\r\n          audio: false,\r\n          video: {\r\n            facingMode: 'user'\r\n          }\r\n        })\r\n        .then(stream => {\r\n          window.stream = stream\r\n          this.videoRef.current.srcObject = stream\r\n          return new Promise((resolve, _) => {\r\n            this.videoRef.current.onloadedmetadata = () => {\r\n              resolve()\r\n            }\r\n          })\r\n        })\r\n\r\n      const modelPromise = tf.loadGraphModel(MODEL_JSON)\r\n      const labelsPromise = fetch(LABELS_URL).then(data => data.json())\r\n      Promise.all([modelPromise, labelsPromise, webCamPromise])\r\n        .then(values => {\r\n          const [model, labels] = values\r\n          this.detectFrame(this.videoRef.current, model, labels)\r\n        })\r\n        .catch(error => {\r\n          console.error(error)\r\n        })\r\n    }\r\n  }\r\n\r\n  detectFrame = (video, model, labels) => {\r\n    TFWrapper(model)\r\n      .detect(video)\r\n      .then(predictions => {\r\n        this.renderPredictions(predictions, labels)\r\n        requestAnimationFrame(() => {\r\n          this.detectFrame(video, model, labels)\r\n        })\r\n        this.setState(state => ({note:{predictions}}));\r\n      })\r\n  }\r\n\r\n  renderPredictions = (predictions, labels) => {\r\n    const ctx = this.canvasRef.current.getContext('2d')\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\r\n    // Font options.\r\n    const font = '16px sans-serif'\r\n    ctx.font = font\r\n    ctx.textBaseline = 'top'\r\n    predictions.forEach(prediction => {\r\n      const x = prediction.bbox[0]\r\n      const y = prediction.bbox[1]\r\n      const width = prediction.bbox[2]\r\n      const height = prediction.bbox[3]\r\n      const label = labels[parseInt(prediction.class)]\r\n      // Draw the bounding box.\r\n      ctx.strokeStyle = '#00FFFF'\r\n      ctx.lineWidth = 4\r\n      ctx.strokeRect(x, y, width, height)\r\n      // Draw the label background.\r\n      ctx.fillStyle = '#00FFFF'\r\n      const textWidth = ctx.measureText(label).width\r\n      const textHeight = parseInt(font, 10) // base 10\r\n      ctx.fillRect(x, y, textWidth + 4, textHeight + 4)\r\n    })\r\n\r\n    predictions.forEach(prediction => {\r\n      const x = prediction.bbox[0]\r\n      const y = prediction.bbox[1]\r\n      const label = labels[parseInt(prediction.class)]\r\n      // Draw the text last to ensure it's on top.\r\n      ctx.fillStyle = '#000000'\r\n      ctx.fillText(label, x, y)\r\n    })\r\n  }\r\n\r\n  getPrediction = () => {\r\n      let a = this.state.note\r\n      this.setState(state => ({storage:a}))\r\n      setTimeout(() => {\r\n        console.log(this.state.storage);\r\n      }, 500);\r\n      \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <video\r\n          className=\"size\"\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n          ref={this.videoRef}\r\n          width=\"600\"\r\n          height=\"500\"\r\n        />\r\n        <canvas\r\n          className=\"size\"\r\n          ref={this.canvasRef}\r\n          width=\"600\"\r\n          height=\"500\"\r\n        />\r\n        <Fab onClick={this.getPrediction} variant=\"extended\" aria-label=\"delete\" >\r\n            <PhotoCameraIcon  />\r\n            確定拍攝\r\n        </Fab>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default function ShotButton() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    return(\r\n      <div>\r\n        <Fab onClick={handleOpen} color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n          <PhotoCameraIcon />\r\n        </Fab>\r\n        <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n        >\r\n          <Fade in={open}>\r\n            <div className={classes.paper}>\r\n              <TheResult/>\r\n            </div>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ButtonAppBar from './bar';\r\nimport ShotButton from './newPredict';\r\n\r\nclass Main extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ButtonAppBar/>\r\n                <ShotButton/>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n// ========================================\r\n  \r\nReactDOM.render(<Main />,document.getElementById('root'));\r\n  "],"sourceRoot":""}